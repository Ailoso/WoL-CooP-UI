include "TriggerLibs/NativeLib"
include "Lib956128B8"

include "LibAB61AAA6_h"

//--------------------------------------------------------------------------------------------------
// Library: WoL Coop (UI)
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void libAB61AAA6_InitLibraries () {
    libNtve_InitVariables();
    lib956128B8_InitVariables();
}

// Variable Initialization
bool libAB61AAA6_InitVariables_completed = false;

void libAB61AAA6_InitVariables () {
    int init_i;
    int init_i1;
    int init_j1;

    if (libAB61AAA6_InitVariables_completed) {
        return;
    }

    libAB61AAA6_InitVariables_completed = true;

    for (init_i = 0; init_i <= 3; init_i += 1) {
        libAB61AAA6_gv_globalValues[init_i].lv_mapKey = "";
    }
    libAB61AAA6_gv_kL_CurrentlyInMission = true;
    for (init_i = 0; init_i <= 3; init_i += 1) {
        libAB61AAA6_gv_kL_ReadyPanel[init_i].lv_dialog = c_invalidDialogId;
        libAB61AAA6_gv_kL_ReadyPanel[init_i].lv_panel = c_invalidDialogControlId;
        for (init_i1 = 0; init_i1 <= 3; init_i1 += 1) {
            libAB61AAA6_gv_kL_ReadyPanel[init_i].lv_playerPanel[init_i1] = c_invalidDialogControlId;
        }
    }
    for (init_i = 0; init_i <= 3; init_i += 1) {
        libAB61AAA6_gv_kL_AchievementFanfarePanel[init_i].lv_fanfareContainer = c_invalidDialogControlId;
        for (init_i1 = 0; init_i1 <= 4; init_i1 += 1) {
            libAB61AAA6_gv_kL_AchievementFanfarePanel[init_i].lv_achievementFrames[init_i1] = c_invalidDialogControlId;
        }
        for (init_i1 = 0; init_i1 <= 4; init_i1 += 1) {
            libAB61AAA6_gv_kL_AchievementFanfarePanel[init_i].lv_title[init_i1] = c_invalidDialogControlId;
        }
        for (init_i1 = 0; init_i1 <= 4; init_i1 += 1) {
            libAB61AAA6_gv_kL_AchievementFanfarePanel[init_i].lv_description[init_i1] = c_invalidDialogControlId;
        }
        for (init_i1 = 0; init_i1 <= 4; init_i1 += 1) {
            libAB61AAA6_gv_kL_AchievementFanfarePanel[init_i].lv_pointsLabel[init_i1] = c_invalidDialogControlId;
        }
        for (init_i1 = 0; init_i1 <= 4; init_i1 += 1) {
            libAB61AAA6_gv_kL_AchievementFanfarePanel[init_i].lv_icon[init_i1] = c_invalidDialogControlId;
        }
    }
    for (init_i = 0; init_i <= 3; init_i += 1) {
        libAB61AAA6_gv_kL_SharedPanel[init_i].lv_dialog = c_invalidDialogId;
        libAB61AAA6_gv_kL_SharedPanel[init_i].lv_sharedPanel = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_SharedPanel[init_i].lv_missionTimeLabel = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_SharedPanel[init_i].lv_quitButton = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 3; init_i += 1) {
        libAB61AAA6_gv_kL_SummaryPanel[init_i].lv_summaryPanel = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_SummaryPanel[init_i].lv_missionReportImage = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_SummaryPanel[init_i].lv_rewardLabel = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_SummaryPanel[init_i].lv_missionLabel = c_invalidDialogControlId;
        for (init_i1 = 0; init_i1 <= 3; init_i1 += 1) {
            libAB61AAA6_gv_kL_SummaryPanel[init_i].lv_playerButtons[init_i1] = c_invalidDialogControlId;
        }
        for (init_i1 = 0; init_i1 <= 3; init_i1 += 1) {
            libAB61AAA6_gv_kL_SummaryPanel[init_i].lv_playerLabel[init_i1] = c_invalidDialogControlId;
        }
        for (init_i1 = 0; init_i1 <= 3; init_i1 += 1) {
            libAB61AAA6_gv_kL_SummaryPanel[init_i].lv_rewardPanels[init_i1] = c_invalidDialogControlId;
        }
        for (init_i1 = 0; init_i1 <= 3; init_i1 += 1) {
            libAB61AAA6_gv_kL_SummaryPanel[init_i].lv_rewardIcons[init_i1] = c_invalidDialogControlId;
        }
        for (init_i1 = 0; init_i1 <= 3; init_i1 += 1) {
            libAB61AAA6_gv_kL_SummaryPanel[init_i].lv_rewardTitles[init_i1] = c_invalidDialogControlId;
        }
        for (init_i1 = 0; init_i1 <= 3; init_i1 += 1) {
            libAB61AAA6_gv_kL_SummaryPanel[init_i].lv_rewardDescriptions[init_i1] = c_invalidDialogControlId;
        }
        for (init_i1 = 0; init_i1 <= 3; init_i1 += 1) {
            libAB61AAA6_gv_kL_SummaryPanel[init_i].lv_rewardScore[init_i1] = c_invalidDialogControlId;
        }
        libAB61AAA6_gv_kL_SummaryPanel[init_i].lv_statBackground = c_invalidDialogControlId;
        for (init_i1 = 0; init_i1 <= 9; init_i1 += 1) {
            libAB61AAA6_gv_kL_SummaryPanel[init_i].lv_statContainers[init_i1] = c_invalidDialogControlId;
        }
        for (init_i1 = 0; init_i1 <= 9; init_i1 += 1) {
            libAB61AAA6_gv_kL_SummaryPanel[init_i].lv_statTitle[init_i1] = c_invalidDialogControlId;
        }
        for (init_i1 = 0; init_i1 <= 9; init_i1 += 1) {
            libAB61AAA6_gv_kL_SummaryPanel[init_i].lv_statValue[init_i1] = c_invalidDialogControlId;
        }
    }
    for (init_i = 0; init_i <= 3; init_i += 1) {
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_armoryPanel = c_invalidDialogControlId;
        for (init_i1 = 0; init_i1 <= 6; init_i1 += 1) {
            libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_groupTabs[init_i1] = c_invalidDialogControlId;
        }
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_baseBunkerPanel = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_baseTurretPanel = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_baseSCVPanel = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_baseCCPanel = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_infantryMarinePanel = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_infantryMedicPanel = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_infantryFirebatPanel = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_infantryMarauderPanel = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_infantryReaperPanel = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_vehiclesHellionPanel = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_vehiclesVulturePanel = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_vehiclesGoliathPanel = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_vehiclesDiamondBackPanel = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_vehiclesSiegeTankPanel = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_starshipsMedivacPanel = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_starshipsWraithPanel = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_starshipsVikingPanel = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_starshipsBansheePanel = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_starshipsBattlecruiserPanel = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_title = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_effects = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_description = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_credits = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_costBackground = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_cost = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryPanel[init_i].lv_purchaseButton = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 3; init_i += 1) {
        libAB61AAA6_gv_kL_ArmoryTechButtons[init_i].lv_projectileAccelerator = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryTechButtons[init_i].lv_neosteelBunker = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryTechButtons[init_i].lv_titaniumHousing = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryTechButtons[init_i].lv_hellstormBatteries = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryTechButtons[init_i].lv_advancedConstruction = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryTechButtons[init_i].lv_dualFusionWelders = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryTechButtons[init_i].lv_fireSupressionSystem = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryTechButtons[init_i].lv_orbitalCommand = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryTechButtons[init_i].lv_stimpack = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryTechButtons[init_i].lv_combatShield = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryTechButtons[init_i].lv_medicUpgd1 = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryTechButtons[init_i].lv_medicUpgd2 = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryTechButtons[init_i].lv_firebatUpgd1 = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryTechButtons[init_i].lv_firebatUpgd2 = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryTechButtons[init_i].lv_marauderUpgd1 = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryTechButtons[init_i].lv_marauderUpgd2 = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryTechButtons[init_i].lv_reaperUpgd1 = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryTechButtons[init_i].lv_reaperUpgd2 = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryTechButtons[init_i].lv_hellionUpgd1 = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryTechButtons[init_i].lv_hellionUpgd2 = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryTechButtons[init_i].lv_vultureUpgd1 = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_ArmoryTechButtons[init_i].lv_vultureUpgd2 = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 3; init_i += 1) {
        libAB61AAA6_gv_kL_LaboratoryPanel[init_i].lv_laboratoryPanel = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_LaboratoryPanel[init_i].lv_researchProgress_Toss = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_LaboratoryPanel[init_i].lv_researchLevel_Toss = c_invalidDialogControlId;
        for (init_i1 = 0; init_i1 <= 5; init_i1 += 1) {
            for (init_j1 = 0; init_j1 <= 3; init_j1 += 1) {
                libAB61AAA6_gv_kL_LaboratoryPanel[init_i].lv_researchButtons_Toss[init_i1][init_j1] = c_invalidDialogControlId;
            }
        }
        libAB61AAA6_gv_kL_LaboratoryPanel[init_i].lv_researchProgress_Zerg = c_invalidDialogControlId;
        libAB61AAA6_gv_kL_LaboratoryPanel[init_i].lv_researchLevel_Zerg = c_invalidDialogControlId;
        for (init_i1 = 0; init_i1 <= 5; init_i1 += 1) {
            for (init_j1 = 0; init_j1 <= 3; init_j1 += 1) {
                libAB61AAA6_gv_kL_LaboratoryPanel[init_i].lv_researchButtons_Zerg[init_i1][init_j1] = c_invalidDialogControlId;
            }
        }
        for (init_i1 = 0; init_i1 <= 5; init_i1 += 1) {
            libAB61AAA6_gv_kL_LaboratoryPanel[init_i].lv_researchAvailablePanel_Zerg[init_i1] = c_invalidDialogControlId;
        }
    }
    libAB61AAA6_gv_dEBUGButtonState = true;
}

// Presets
// Functions
void libAB61AAA6_gf_LoadBankDataforPlayer (int lp_player) {
    // Automatic Variable Declarations
    int auto562B9C66_val;

    // Implementation
    auto562B9C66_val = lp_player;
    if (auto562B9C66_val == 1) {
        libAB61AAA6_gv_globalValues[lp_player].lv_playerBank = lib956128B8_gv_bankP1;
    }
    else if (auto562B9C66_val == 2) {
        libAB61AAA6_gv_globalValues[lp_player].lv_playerBank = lib956128B8_gv_bankP2;
    }
    else if (auto562B9C66_val == 3) {
        libAB61AAA6_gv_globalValues[lp_player].lv_playerBank = lib956128B8_gv_bankP3;
    }
    else {
    }
    libAB61AAA6_gv_globalValues[lp_player].lv_mapKey = lib956128B8_gf_GetMissionBankKey(lib956128B8_gf_GetCoopMissionNr(lib956128B8_gv_coop_CurrentMap));
    libAB61AAA6_gv_globalValues[lp_player].lv_cash = BankValueGetAsInt(libAB61AAA6_gv_globalValues[lp_player].lv_playerBank, "playerstats", "cash");
    libAB61AAA6_gv_globalValues[lp_player].lv_protossResearch = BankValueGetAsInt(libAB61AAA6_gv_globalValues[lp_player].lv_playerBank, "playerstats", "protoss");
    libAB61AAA6_gv_globalValues[lp_player].lv_protossResearch = BankValueGetAsInt(libAB61AAA6_gv_globalValues[lp_player].lv_playerBank, "playerstats", "zerg");
    libAB61AAA6_gv_globalValues[lp_player].lv_missionPlayedPreviously = BankValueGetAsFlag(libAB61AAA6_gv_globalValues[lp_player].lv_playerBank, libAB61AAA6_gv_globalValues[lp_player].lv_mapKey, "played");
    libAB61AAA6_gv_globalValues[lp_player].lv_missionPlayedPreviously = BankValueGetAsFlag(libAB61AAA6_gv_globalValues[lp_player].lv_playerBank, libAB61AAA6_gv_globalValues[lp_player].lv_mapKey, "played");
}

void libAB61AAA6_gf_AwardAchievement (string lp_achievement, int lp_player) {
    // Automatic Variable Declarations
    int auto3B35BD91_val;

    // Implementation
    if ((lp_achievement == null)) {
        return ;
    }

    DialogControlSendAnimationEvent(libAB61AAA6_gv_kL_AchievementFanfarePanel[lp_player].lv_fanfareContainer, PlayerGroupSingle(lp_player), "Show");
    libAB61AAA6_gf_KL_DisplayAchievement(lp_achievement, lp_player);
    auto3B35BD91_val = lp_player;
    if (auto3B35BD91_val == 1) {
        TriggerExecute(libAB61AAA6_gt_KL_HideAchievementPanelP1, true, false);
    }
    else if (auto3B35BD91_val == 2) {
        TriggerExecute(libAB61AAA6_gt_KL_HideAchievementPanelP2, true, false);
    }
    else if (auto3B35BD91_val == 3) {
        TriggerExecute(libAB61AAA6_gt_KL_HideAchievementPanelP3, true, false);
    }
    else {
    }
}

trigger auto_libAB61AAA6_gf_KL_DisplayAchievement_Trigger = null;
string auto_libAB61AAA6_gf_KL_DisplayAchievement_lp_achievement;
int auto_libAB61AAA6_gf_KL_DisplayAchievement_lp_player;

void libAB61AAA6_gf_KL_DisplayAchievement (string lp_achievement, int lp_player) {
    auto_libAB61AAA6_gf_KL_DisplayAchievement_lp_achievement = lp_achievement;
    auto_libAB61AAA6_gf_KL_DisplayAchievement_lp_player = lp_player;

    if (auto_libAB61AAA6_gf_KL_DisplayAchievement_Trigger == null) {
        auto_libAB61AAA6_gf_KL_DisplayAchievement_Trigger = TriggerCreate("auto_libAB61AAA6_gf_KL_DisplayAchievement_TriggerFunc");
    }

    TriggerExecute(auto_libAB61AAA6_gf_KL_DisplayAchievement_Trigger, false, false);
}

bool auto_libAB61AAA6_gf_KL_DisplayAchievement_TriggerFunc (bool testConds, bool runActions) {
    string lp_achievement = auto_libAB61AAA6_gf_KL_DisplayAchievement_lp_achievement;
    int lp_player = auto_libAB61AAA6_gf_KL_DisplayAchievement_lp_player;

    // Variable Declarations
    int lv_index;
    const int lv_maxAchievements = 5;
    int lv_minAchievements;
    const fixed lv_animationTotal = 3.5;
    const fixed lv_animationDelay = 0.5;

    // Automatic Variable Declarations
    bool autoCEA7B9B2_val;
    const int autoEA7A1AF2_ae = 5;
    const int autoEA7A1AF2_ai = 1;
    string autoE201C60E_val;

    // Variable Initialization

    // Implementation
    autoCEA7B9B2_val = libAB61AAA6_gv_kL_CurrentlyInMission;
    if (autoCEA7B9B2_val == true) {
        DialogControlSetAnimationState(libAB61AAA6_gv_kL_AchievementFanfarePanel[lp_player].lv_fanfareContainer, PlayerGroupSingle(lp_player), "MenuPresence", "InGame");
    }
    else if (autoCEA7B9B2_val == false) {
        DialogControlSetAnimationState(libAB61AAA6_gv_kL_AchievementFanfarePanel[lp_player].lv_fanfareContainer, PlayerGroupSingle(lp_player), "MenuPresence", "InMenu");
    }
    else {
    }
    lv_index = 0;
    for ( ; ( (autoEA7A1AF2_ai >= 0 && lv_index <= autoEA7A1AF2_ae) || (autoEA7A1AF2_ai < 0 && lv_index >= autoEA7A1AF2_ae) ) ; lv_index += autoEA7A1AF2_ai ) {
        if ((lv_index != 5)) {
            if ((libAB61AAA6_gv_kL_ActiveAchievement[lp_player][lv_index] == false)) {
                libAB61AAA6_gv_kL_ActiveAchievement[lp_player][lv_index] = true;
                libNtve_gf_SetDialogItemImage(libAB61AAA6_gv_kL_AchievementFanfarePanel[lp_player].lv_icon[lv_index], UserDataGetImagePath("Achievements", lp_achievement, "Icon", 1), PlayerGroupAll());
                libNtve_gf_SetDialogItemText(libAB61AAA6_gv_kL_AchievementFanfarePanel[lp_player].lv_title[lv_index], StringToText(UserDataGetString("Achievements", lp_achievement, "Title", 1)), PlayerGroupSingle(lp_player));
                libNtve_gf_SetDialogItemText(libAB61AAA6_gv_kL_AchievementFanfarePanel[lp_player].lv_description[lv_index], StringToText(UserDataGetString("Achievements", lp_achievement, "Description", 1)), PlayerGroupSingle(lp_player));
                libNtve_gf_SetDialogItemText(libAB61AAA6_gv_kL_AchievementFanfarePanel[lp_player].lv_pointsLabel[lv_index], StringToText(UserDataGetString("Achievements", lp_achievement, "Points", 1)), PlayerGroupSingle(lp_player));
                autoE201C60E_val = UserDataGetGameLink("Achievements", lp_achievement, "Race", 1);
                if (autoE201C60E_val == "Terr") {
                    DialogControlSetAnimationState(libAB61AAA6_gv_kL_AchievementFanfarePanel[lp_player].lv_fanfareContainer, PlayerGroupSingle(lp_player), "StyleStateGroup", "TerranState");
                }
                else if (autoE201C60E_val == "Zerg") {
                    DialogControlSetAnimationState(libAB61AAA6_gv_kL_AchievementFanfarePanel[lp_player].lv_fanfareContainer, PlayerGroupSingle(lp_player), "StyleStateGroup", "ZergState");
                }
                else if (autoE201C60E_val == "Prot") {
                    DialogControlSetAnimationState(libAB61AAA6_gv_kL_AchievementFanfarePanel[lp_player].lv_fanfareContainer, PlayerGroupSingle(lp_player), "StyleStateGroup", "ProtossState");
                }
                else {
                }
                DialogControlSetVisible(libAB61AAA6_gv_kL_AchievementFanfarePanel[lp_player].lv_achievementFrames[lv_index], PlayerGroupSingle(lp_player), true);
                Wait((lv_animationTotal + (lv_animationDelay * lv_animationDelay)), c_timeReal);
                libAB61AAA6_gv_kL_ActiveAchievement[lp_player][lv_index] = false;
                DialogControlSetVisible(libAB61AAA6_gv_kL_AchievementFanfarePanel[lp_player].lv_achievementFrames[lv_index], PlayerGroupSingle(lp_player), false);
                return true;
            }

        }

    }
    return true;
}

void libAB61AAA6_gf_UpdateMissionData (string lp_mission, int lp_player) {
    // Variable Declarations
    int lv_missionCashReward;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_missionCashReward = lib956128B8_gf_GetCashForMission(lib956128B8_gv_coop_CurrentMap);
    libNtve_gf_SetDialogItemText(libAB61AAA6_gv_kL_SharedPanel[lp_player].lv_missionTimeLabel, TextTimeFormat(StringToText("<min2/>:<sec2/>"), FixedToInt(GameGetMissionTime())), PlayerGroupSingle(lp_player));
    libNtve_gf_SetDialogItemText(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_missionLabel, StringToText(UserDataGetString("MissionData", lp_mission, "Mission Name", 1)), PlayerGroupSingle(lp_player));
    libNtve_gf_SetDialogItemText(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_rewardLabel, (IntToText(lv_missionCashReward) + StringExternal("Param/Value/lib_AB61AAA6_0DA7B3BB")), PlayerGroupSingle(lp_player));
    libNtve_gf_SetDialogItemImage(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_statBackground, UserDataGetImagePath("MissionData", lp_mission, "MissionLoadScreen", 1), PlayerGroupSingle(lp_player));
    libNtve_gf_SetDialogItemText(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_playerLabel[1], PlayerName(1), PlayerGroupSingle(lp_player));
    libNtve_gf_SetDialogItemText(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_playerLabel[2], PlayerName(2), PlayerGroupSingle(lp_player));
    libNtve_gf_SetDialogItemText(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_playerLabel[3], PlayerName(3), PlayerGroupSingle(lp_player));
}

void libAB61AAA6_gf_UpdateAchievementData (string lp_achievement, int lp_player, int lp_slot) {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_SetDialogItemText(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_rewardTitles[lp_slot], StringToText(UserDataGetString("Achievements", lp_achievement, "Title", 1)), PlayerGroupSingle(lp_player));
    libNtve_gf_SetDialogItemText(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_rewardDescriptions[lp_slot], StringToText(UserDataGetString("Achievements", lp_achievement, "Description", 1)), PlayerGroupSingle(lp_player));
    libNtve_gf_SetDialogItemText(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_rewardScore[lp_slot], IntToText(UserDataGetInt("Achievements", lp_achievement, "Points", 1)), PlayerGroupSingle(lp_player));
    libNtve_gf_SetDialogItemImage(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_rewardIcons[lp_slot], UserDataGetImagePath("Achievements", lp_achievement, "Icon", 1), PlayerGroupSingle(lp_player));
}

void libAB61AAA6_gf_AddStatPanel (int lp_player, string lp_title, string lp_value) {
    // Automatic Variable Declarations
    // Implementation
    libAB61AAA6_gv_kL_StatPanelsInUse += 1;
    if ((lp_title == null)) {
        libAB61AAA6_gv_kL_StatPanelActive[libAB61AAA6_gv_kL_StatPanelsInUse] = false;
        return ;
    }
    else {
        libAB61AAA6_gv_kL_StatPanelActive[libAB61AAA6_gv_kL_StatPanelsInUse] = true;
    }
    libNtve_gf_SetDialogItemText(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_statTitle[libAB61AAA6_gv_kL_StatPanelsInUse], StringToText(lp_title), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_statValue[libAB61AAA6_gv_kL_StatPanelsInUse], StringToText(lp_value), PlayerGroupAll());
}

void libAB61AAA6_gf_PlayStatBirth (int lp_player) {
    // Variable Declarations
    int lv_index;

    // Automatic Variable Declarations
    int auto9A69BF4D_ae;
    const int auto9A69BF4D_ai = 1;

    // Variable Initialization

    // Implementation
    auto9A69BF4D_ae = libAB61AAA6_gv_kL_StatPanelsInUse;
    lv_index = 1;
    for ( ; ( (auto9A69BF4D_ai >= 0 && lv_index <= auto9A69BF4D_ae) || (auto9A69BF4D_ai < 0 && lv_index >= auto9A69BF4D_ae) ) ; lv_index += auto9A69BF4D_ai ) {
        if ((libAB61AAA6_gv_kL_StatPanelActive[lv_index] == true)) {
            DialogControlSendAnimationEvent(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_statContainers[lv_index], PlayerGroupAll(), "Birth");
        }

        Wait(0.2, c_timeGame);
    }
}

void libAB61AAA6_gf_KL_UpgradeDataSet (string lp_upgrade, int lp_player) {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_SetDialogItemText(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_title, StringToText(UserDataGetString("UpgradeData", lp_upgrade, "Title", 1)), PlayerGroupSingle(lp_player));
    libNtve_gf_SetDialogItemText(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_effects, UserDataGetText("UpgradeData", lp_upgrade, "Effects", 1), PlayerGroupSingle(lp_player));
    libNtve_gf_SetDialogItemText(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_description, UserDataGetText("UpgradeData", lp_upgrade, "Flavor Text", 1), PlayerGroupSingle(lp_player));
    libNtve_gf_SetDialogItemText(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_cost, (IntToText(UserDataGetInt("UpgradeData", lp_upgrade, "Cost", 1)) + StringExternal("Param/Value/lib_AB61AAA6_A94A5E4D")), PlayerGroupSingle(lp_player));
}

void libAB61AAA6_gf_KL_UpdateArmory (int lp_player) {
    // Automatic Variable Declarations
    // Implementation
    libAB61AAA6_gf_KL_DisplayAllowedUnits(lp_player);
    libAB61AAA6_gf_KL_UpdateArmoryCash(lp_player);
    if ((libAB61AAA6_gv_kL_AllowedInfantryUnits > 0)) {
        DialogControlSetVisible(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_groupTabs[2], PlayerGroupSingle(lp_player), true);
    }

    if ((libAB61AAA6_gv_kL_AllowedVehicleUnits > 0)) {
        DialogControlSetVisible(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_groupTabs[3], PlayerGroupSingle(lp_player), true);
    }

    if ((libAB61AAA6_gv_kL_AllowedStarshipUnits > 0)) {
        DialogControlSetVisible(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_groupTabs[4], PlayerGroupSingle(lp_player), true);
    }

    if ((libAB61AAA6_gv_globalValues[lp_player].lv_cash == 0)) {
        libNtve_gf_SetDialogItemText(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_credits, StringExternal("Param/Value/lib_AB61AAA6_0413DAB1"), PlayerGroupAll());
    }
    else {
        libNtve_gf_SetDialogItemText(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_credits, (IntToText(libAB61AAA6_gv_globalValues[lp_player].lv_cash) + StringExternal("Param/Value/lib_AB61AAA6_FD5966F1")), PlayerGroupSingle(lp_player));
    }
}

void libAB61AAA6_gf_KL_UpdateArmoryCash (int lp_player) {
    // Automatic Variable Declarations
    // Implementation
    if ((libAB61AAA6_gv_globalValues[lp_player].lv_cash == 0)) {
        libNtve_gf_SetDialogItemText(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_credits, StringExternal("Param/Value/lib_AB61AAA6_2374A9E3"), PlayerGroupSingle(lp_player));
    }
    else {
        libNtve_gf_SetDialogItemText(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_credits, (IntToText(libAB61AAA6_gv_globalValues[lp_player].lv_cash) + StringExternal("Param/Value/lib_AB61AAA6_A5ADBC0B")), PlayerGroupSingle(lp_player));
    }
}

void libAB61AAA6_gf_KL_DisplayAllowedUnits (int lp_player) {
    // Automatic Variable Declarations
    // Implementation
    if ((TechTreeUnitIsAllowed(lp_player, "Marine") == true)) {
        libAB61AAA6_gv_kL_AllowedInfantryUnits += 1;
        DialogControlSetVisible(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_infantryMarinePanel, PlayerGroupSingle(lp_player), true);
    }

    if ((TechTreeUnitIsAllowed(lp_player, "Medic") == true)) {
        libAB61AAA6_gv_kL_AllowedInfantryUnits += 1;
        DialogControlSetVisible(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_infantryMedicPanel, PlayerGroupSingle(lp_player), true);
    }

    if ((TechTreeUnitIsAllowed(lp_player, "Firebat") == true)) {
        libAB61AAA6_gv_kL_AllowedInfantryUnits += 1;
        DialogControlSetVisible(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_infantryFirebatPanel, PlayerGroupSingle(lp_player), true);
    }

    if ((TechTreeUnitIsAllowed(lp_player, "Marauder") == true)) {
        libAB61AAA6_gv_kL_AllowedInfantryUnits += 1;
        DialogControlSetVisible(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_infantryMarauderPanel, PlayerGroupSingle(lp_player), true);
    }

    if ((TechTreeUnitIsAllowed(lp_player, "Reaper") == true)) {
        libAB61AAA6_gv_kL_AllowedInfantryUnits += 1;
        DialogControlSetVisible(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_infantryReaperPanel, PlayerGroupSingle(lp_player), true);
    }

    if ((TechTreeUnitIsAllowed(lp_player, "Hellion") == true)) {
        libAB61AAA6_gv_kL_AllowedVehicleUnits += 1;
        DialogControlSetVisible(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_vehiclesHellionPanel, PlayerGroupSingle(lp_player), true);
    }

    if ((TechTreeUnitIsAllowed(lp_player, "Vulture") == true)) {
        libAB61AAA6_gv_kL_AllowedVehicleUnits += 1;
        DialogControlSetVisible(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_vehiclesVulturePanel, PlayerGroupSingle(lp_player), true);
    }

    if ((TechTreeUnitIsAllowed(lp_player, "Goliath") == true)) {
        libAB61AAA6_gv_kL_AllowedVehicleUnits += 1;
        DialogControlSetVisible(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_vehiclesGoliathPanel, PlayerGroupSingle(lp_player), true);
    }

    if ((TechTreeUnitIsAllowed(lp_player, "Diamondback") == true)) {
        libAB61AAA6_gv_kL_AllowedVehicleUnits += 1;
        DialogControlSetVisible(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_vehiclesDiamondBackPanel, PlayerGroupSingle(lp_player), true);
    }

    if ((TechTreeUnitIsAllowed(lp_player, "SiegeTankSkinPreview") == true)) {
        libAB61AAA6_gv_kL_AllowedVehicleUnits += 1;
        DialogControlSetVisible(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_vehiclesSiegeTankPanel, PlayerGroupSingle(lp_player), true);
    }

}

void libAB61AAA6_gf_ArmoryDisplayPurchaseFanfare (int lp_anchorDialog, int lp_player) {
    // Variable Declarations
    const fixed lv_animationTime = 1.1;
    int lv_fanfareFrame;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_fanfareFrame = c_invalidDialogControlId;

    // Implementation
    DialogControlCreateFromTemplate(libAB61AAA6_gv_kL_SharedPanel[lp_player].lv_dialog, c_triggerControlTypePanel, "WoL_Coop_StandardTemplate/TechpurchaseFanfare");
    lv_fanfareFrame = DialogControlLastCreated();
    DialogControlSetPositionRelative(lv_fanfareFrame, PlayerGroupSingle(lp_player), c_anchorCenter, lp_anchorDialog, c_anchorCenter, 0, 0);
    DialogControlSetVisible(lv_fanfareFrame, PlayerGroupSingle(lp_player), true);
    Wait(lv_animationTime, c_timeGame);
    DialogControlDestroy(lv_fanfareFrame);
}

void libAB61AAA6_gf_KL_HookupPanelsForPlayer (int lp_player) {
    // Variable Declarations
    int lv_index;
    int lv_index2;

    // Automatic Variable Declarations
    const int auto7947C7A4_ae = 3;
    const int auto7947C7A4_ai = 1;
    const int autoFD63EFDD_ae = 3;
    const int autoFD63EFDD_ai = 1;
    const int auto5DA40D5F_ae = 9;
    const int auto5DA40D5F_ai = 1;
    const int auto8D8F8200_ae = 6;
    const int auto8D8F8200_ai = 1;
    const int autoCFCFF85A_ae = 5;
    const int autoCFCFF85A_ai = 1;
    const int auto43FAB84B_ae = 3;
    const int auto43FAB84B_ai = 1;
    const int auto746F523B_ae = 5;
    const int auto746F523B_ai = 1;
    const int auto12BBE074_ae = 3;
    const int auto12BBE074_ai = 1;

    // Variable Initialization

    // Implementation
    DialogCreate(500, 400, c_anchorCenter, 0, 0, true);
    DialogSetFullscreen(DialogLastCreated(), true);
    DialogSetImageVisible(DialogLastCreated(), false);
    libAB61AAA6_gv_kL_SharedPanel[lp_player].lv_dialog = DialogLastCreated();
    DialogControlCreateFromTemplate(libAB61AAA6_gv_kL_SharedPanel[lp_player].lv_dialog, c_triggerControlTypePanel, "WoL_Coop_BattleReportSharedPanel/SharedPanel");
    libAB61AAA6_gv_kL_SharedPanel[lp_player].lv_sharedPanel = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_SharedPanel[lp_player].lv_sharedPanel, c_triggerControlTypeLabel, libNtve_gf_ConvertStringToUILayoutFrameName("MetalBackgroundPanel/MissionTimeValue"));
    libAB61AAA6_gv_kL_SharedPanel[lp_player].lv_missionTimeLabel = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_SharedPanel[lp_player].lv_sharedPanel, c_triggerControlTypeButton, libNtve_gf_ConvertStringToUILayoutFrameName("NavFrameRight/NavButton"));
    libAB61AAA6_gv_kL_SharedPanel[lp_player].lv_quitButton = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_SharedPanel[lp_player].lv_sharedPanel, c_triggerControlTypePanel, libNtve_gf_ConvertStringToUILayoutFrameName("MetalBackgroundPanel/SummaryPanel"));
    libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_summaryPanel = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_summaryPanel, c_triggerControlTypeImage, libNtve_gf_ConvertStringToUILayoutFrameName("MoviePanel/MissionReportImage"));
    libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_missionReportImage = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_summaryPanel, c_triggerControlTypeLabel, libNtve_gf_ConvertStringToUILayoutFrameName("MoviePanel/MissionReportRewardLabel"));
    libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_rewardLabel = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_summaryPanel, c_triggerControlTypeLabel, libNtve_gf_ConvertStringToUILayoutFrameName("MoviePanel/MissionReportMissionLabel"));
    libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_missionLabel = DialogControlLastCreated();
    lv_index = 1;
    for ( ; ( (auto7947C7A4_ai >= 0 && lv_index <= auto7947C7A4_ae) || (auto7947C7A4_ai < 0 && lv_index >= auto7947C7A4_ae) ) ; lv_index += auto7947C7A4_ai ) {
        DialogControlHookup(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_summaryPanel, c_triggerControlTypeButton, libNtve_gf_ConvertStringToUILayoutFrameName(("TeamPanel/Player" + IntToString(lv_index) + "Button")));
        libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_playerButtons[lv_index] = DialogControlLastCreated();
        DialogControlHookup(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_playerButtons[lv_index], c_triggerControlTypeLabel, libNtve_gf_ConvertStringToUILayoutFrameName("Label"));
        libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_playerLabel[lv_index] = DialogControlLastCreated();
    }
    lv_index = 1;
    for ( ; ( (autoFD63EFDD_ai >= 0 && lv_index <= autoFD63EFDD_ae) || (autoFD63EFDD_ai < 0 && lv_index >= autoFD63EFDD_ae) ) ; lv_index += autoFD63EFDD_ai ) {
        DialogControlHookup(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_summaryPanel, c_triggerControlTypePanel, libNtve_gf_ConvertStringToUILayoutFrameName(("RewardPanel/RewardPanel" + IntToString(lv_index))));
        libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_rewardPanels[lv_index] = DialogControlLastCreated();
        DialogControlHookup(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_rewardPanels[lv_index], c_triggerControlTypeImage, libNtve_gf_ConvertStringToUILayoutFrameName("Icon"));
        libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_rewardIcons[lv_index] = DialogControlLastCreated();
        DialogControlHookup(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_rewardPanels[lv_index], c_triggerControlTypeLabel, libNtve_gf_ConvertStringToUILayoutFrameName("Title"));
        libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_rewardTitles[lv_index] = DialogControlLastCreated();
        DialogControlHookup(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_rewardPanels[lv_index], c_triggerControlTypeLabel, libNtve_gf_ConvertStringToUILayoutFrameName("Description"));
        libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_rewardDescriptions[lv_index] = DialogControlLastCreated();
        DialogControlHookup(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_rewardPanels[lv_index], c_triggerControlTypeLabel, libNtve_gf_ConvertStringToUILayoutFrameName("Score"));
        libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_rewardScore[lv_index] = DialogControlLastCreated();
    }
    DialogControlHookup(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_summaryPanel, c_triggerControlTypePanel, libNtve_gf_ConvertStringToUILayoutFrameName("StatsPanel/StatsBackground"));
    libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_statBackground = DialogControlLastCreated();
    lv_index = 1;
    for ( ; ( (auto5DA40D5F_ai >= 0 && lv_index <= auto5DA40D5F_ae) || (auto5DA40D5F_ai < 0 && lv_index >= auto5DA40D5F_ae) ) ; lv_index += auto5DA40D5F_ai ) {
        DialogControlHookup(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_summaryPanel, c_triggerControlTypePanel, libNtve_gf_ConvertStringToUILayoutFrameName(("StatsPanel/StatPanel" + IntToString(lv_index))));
        libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_statContainers[lv_index] = DialogControlLastCreated();
        DialogControlHookup(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_statContainers[lv_index], c_triggerControlTypeLabel, libNtve_gf_ConvertStringToUILayoutFrameName("Title"));
        libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_statTitle[lv_index] = DialogControlLastCreated();
        DialogControlHookup(libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_statContainers[lv_index], c_triggerControlTypeLabel, libNtve_gf_ConvertStringToUILayoutFrameName("StatValue"));
        libAB61AAA6_gv_kL_SummaryPanel[lp_player].lv_statValue[lv_index] = DialogControlLastCreated();
    }
    DialogControlHookup(libAB61AAA6_gv_kL_SharedPanel[lp_player].lv_sharedPanel, c_triggerControlTypePanel, libNtve_gf_ConvertStringToUILayoutFrameName("MetalBackgroundPanel/ArmoryPanel"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel = DialogControlLastCreated();
    lv_index = 1;
    for ( ; ( (auto8D8F8200_ai >= 0 && lv_index <= auto8D8F8200_ae) || (auto8D8F8200_ai < 0 && lv_index >= auto8D8F8200_ae) ) ; lv_index += auto8D8F8200_ai ) {
        DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeButton, libNtve_gf_ConvertStringToUILayoutFrameName(("ArmoryTab" + IntToString(lv_index))));
        libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_groupTabs[lv_index] = DialogControlLastCreated();
    }
    libAB61AAA6_gf_KL_HookupArmoryPanels(lp_player);
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeLabel, libNtve_gf_ConvertStringToUILayoutFrameName("TechDescriptionPanel/Title"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_title = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeLabel, libNtve_gf_ConvertStringToUILayoutFrameName("TechDescriptionPanel/Effect"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_effects = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeLabel, libNtve_gf_ConvertStringToUILayoutFrameName("TechDescriptionPanel/Description"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_description = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeLabel, libNtve_gf_ConvertStringToUILayoutFrameName("PurchasePanel/CreditsBackground/Credits"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_credits = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeImage, libNtve_gf_ConvertStringToUILayoutFrameName("PurchasePanel/CostBackground"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_costBackground = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeLabel, libNtve_gf_ConvertStringToUILayoutFrameName("PurchasePanel/CostBackground/Cost"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_cost = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeButton, libNtve_gf_ConvertStringToUILayoutFrameName("PurchasePanel/PurchaseButton"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_purchaseButton = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_SharedPanel[lp_player].lv_sharedPanel, c_triggerControlTypePanel, libNtve_gf_ConvertStringToUILayoutFrameName("MetalBackgroundPanel/LaboratoryPanel"));
    libAB61AAA6_gv_kL_LaboratoryPanel[lp_player].lv_laboratoryPanel = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_LaboratoryPanel[lp_player].lv_laboratoryPanel, c_triggerControlTypeLabel, libNtve_gf_ConvertStringToUILayoutFrameName("ProtossGroupPanel/TitleBox/Subtitle"));
    libAB61AAA6_gv_kL_LaboratoryPanel[lp_player].lv_researchProgress_Toss = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_LaboratoryPanel[lp_player].lv_laboratoryPanel, c_triggerControlTypeLabel, libNtve_gf_ConvertStringToUILayoutFrameName("ProtossGroupPanel/ResearchBox/Title"));
    libAB61AAA6_gv_kL_LaboratoryPanel[lp_player].lv_researchLevel_Toss = DialogControlLastCreated();
    lv_index = 1;
    for ( ; ( (autoCFCFF85A_ai >= 0 && lv_index <= autoCFCFF85A_ae) || (autoCFCFF85A_ai < 0 && lv_index >= autoCFCFF85A_ae) ) ; lv_index += autoCFCFF85A_ai ) {
        lv_index2 = 1;
        for ( ; ( (auto43FAB84B_ai >= 0 && lv_index2 <= auto43FAB84B_ae) || (auto43FAB84B_ai < 0 && lv_index2 >= auto43FAB84B_ae) ) ; lv_index2 += auto43FAB84B_ai ) {
            DialogControlHookup(libAB61AAA6_gv_kL_LaboratoryPanel[lp_player].lv_laboratoryPanel, c_triggerControlTypeButton, libNtve_gf_ConvertStringToUILayoutFrameName(("ProtossGroupPanel/ContentContainer/Row" + IntToString(lv_index) + "Btn" + IntToString(lv_index2))));
            libAB61AAA6_gv_kL_LaboratoryPanel[lp_player].lv_researchButtons_Toss[lv_index][lv_index2] = DialogControlLastCreated();
        }
    }
    DialogControlHookup(libAB61AAA6_gv_kL_LaboratoryPanel[lp_player].lv_laboratoryPanel, c_triggerControlTypeLabel, libNtve_gf_ConvertStringToUILayoutFrameName("ZergGroupPanel/TitleBox/Subtitle"));
    libAB61AAA6_gv_kL_LaboratoryPanel[lp_player].lv_researchProgress_Zerg = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_LaboratoryPanel[lp_player].lv_laboratoryPanel, c_triggerControlTypeLabel, libNtve_gf_ConvertStringToUILayoutFrameName("ZergGroupPanel/ResearchBox/Title"));
    libAB61AAA6_gv_kL_LaboratoryPanel[lp_player].lv_researchLevel_Zerg = DialogControlLastCreated();
    lv_index = 1;
    for ( ; ( (auto746F523B_ai >= 0 && lv_index <= auto746F523B_ae) || (auto746F523B_ai < 0 && lv_index >= auto746F523B_ae) ) ; lv_index += auto746F523B_ai ) {
        lv_index2 = 1;
        for ( ; ( (auto12BBE074_ai >= 0 && lv_index2 <= auto12BBE074_ae) || (auto12BBE074_ai < 0 && lv_index2 >= auto12BBE074_ae) ) ; lv_index2 += auto12BBE074_ai ) {
            DialogControlHookup(libAB61AAA6_gv_kL_LaboratoryPanel[lp_player].lv_laboratoryPanel, c_triggerControlTypeButton, libNtve_gf_ConvertStringToUILayoutFrameName(("ZergGroupPanel/ContentContainer/Row" + IntToString(lv_index) + "Btn" + IntToString(lv_index2))));
            libAB61AAA6_gv_kL_LaboratoryPanel[lp_player].lv_researchButtons_Zerg[lv_index][lv_index2] = DialogControlLastCreated();
        }
    }
    DialogControlHookup(libAB61AAA6_gv_kL_LaboratoryPanel[lp_player].lv_laboratoryPanel, c_triggerControlTypePanel, libNtve_gf_ConvertStringToUILayoutFrameName("ZergGroupPanel/ContentContainer/AvailablePanel1"));
    libAB61AAA6_gv_kL_LaboratoryPanel[lp_player].lv_researchAvailablePanel_Zerg[1] = DialogControlLastCreated();
}

void libAB61AAA6_gf_KL_HookupArmoryPanels (int lp_player) {
    // Variable Declarations
    int lv_index;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeImage, libNtve_gf_ConvertStringToUILayoutFrameName("TechGroupPanel/BaseGroup/BunkerPanel"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_baseBunkerPanel = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_baseBunkerPanel, c_triggerControlTypeButton, libNtve_gf_ConvertStringToUILayoutFrameName("TechButton1"));
    libAB61AAA6_gv_kL_ArmoryTechButtons[lp_player].lv_projectileAccelerator = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_baseBunkerPanel, c_triggerControlTypeButton, libNtve_gf_ConvertStringToUILayoutFrameName("TechButton2"));
    libAB61AAA6_gv_kL_ArmoryTechButtons[lp_player].lv_neosteelBunker = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeImage, libNtve_gf_ConvertStringToUILayoutFrameName("TechGroupPanel/BaseGroup/MissileTurretPanel"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_baseTurretPanel = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_baseTurretPanel, c_triggerControlTypeButton, libNtve_gf_ConvertStringToUILayoutFrameName("TechButton1"));
    libAB61AAA6_gv_kL_ArmoryTechButtons[lp_player].lv_titaniumHousing = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_baseTurretPanel, c_triggerControlTypeButton, libNtve_gf_ConvertStringToUILayoutFrameName("TechButton2"));
    libAB61AAA6_gv_kL_ArmoryTechButtons[lp_player].lv_titaniumHousing = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeImage, libNtve_gf_ConvertStringToUILayoutFrameName("TechGroupPanel/BaseGroup/SCVPanel"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_baseSCVPanel = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_baseSCVPanel, c_triggerControlTypeButton, libNtve_gf_ConvertStringToUILayoutFrameName("TechButton1"));
    libAB61AAA6_gv_kL_ArmoryTechButtons[lp_player].lv_advancedConstruction = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_baseSCVPanel, c_triggerControlTypeButton, libNtve_gf_ConvertStringToUILayoutFrameName("TechButton2"));
    libAB61AAA6_gv_kL_ArmoryTechButtons[lp_player].lv_dualFusionWelders = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeImage, libNtve_gf_ConvertStringToUILayoutFrameName("TechGroupPanel/BaseGroup/CommandCenterPanel"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_baseCCPanel = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_baseCCPanel, c_triggerControlTypeButton, libNtve_gf_ConvertStringToUILayoutFrameName("TechButton1"));
    libAB61AAA6_gv_kL_ArmoryTechButtons[lp_player].lv_fireSupressionSystem = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_baseCCPanel, c_triggerControlTypeButton, libNtve_gf_ConvertStringToUILayoutFrameName("TechButton2"));
    libAB61AAA6_gv_kL_ArmoryTechButtons[lp_player].lv_orbitalCommand = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeImage, libNtve_gf_ConvertStringToUILayoutFrameName("TechGroupPanel/InfantryGroup/MarinePanel"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_infantryMarinePanel = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_infantryMarinePanel, c_triggerControlTypeButton, libNtve_gf_ConvertStringToUILayoutFrameName("TechButton1"));
    libAB61AAA6_gv_kL_ArmoryTechButtons[lp_player].lv_stimpack = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_infantryMarinePanel, c_triggerControlTypeButton, libNtve_gf_ConvertStringToUILayoutFrameName("TechButton2"));
    libAB61AAA6_gv_kL_ArmoryTechButtons[lp_player].lv_combatShield = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeImage, libNtve_gf_ConvertStringToUILayoutFrameName("TechGroupPanel/InfantryGroup/MedicPanel"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_infantryMedicPanel = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeImage, libNtve_gf_ConvertStringToUILayoutFrameName("TechGroupPanel/InfantryGroup/FirebatPanel"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_infantryFirebatPanel = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeImage, libNtve_gf_ConvertStringToUILayoutFrameName("TechGroupPanel/InfantryGroup/MarauderPanel"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_infantryMarauderPanel = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeImage, libNtve_gf_ConvertStringToUILayoutFrameName("TechGroupPanel/InfantryGroup/ReaperPanel"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_infantryReaperPanel = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeImage, libNtve_gf_ConvertStringToUILayoutFrameName("TechGroupPanel/VehicleGroup/HellionPanel"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_vehiclesHellionPanel = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeImage, libNtve_gf_ConvertStringToUILayoutFrameName("TechGroupPanel/VehicleGroup/VulturePanel"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_vehiclesVulturePanel = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeImage, libNtve_gf_ConvertStringToUILayoutFrameName("TechGroupPanel/VehicleGroup/GoliathPanel"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_vehiclesGoliathPanel = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeImage, libNtve_gf_ConvertStringToUILayoutFrameName("TechGroupPanel/VehicleGroup/DiamondbackPanel"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_vehiclesDiamondBackPanel = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeImage, libNtve_gf_ConvertStringToUILayoutFrameName("TechGroupPanel/VehicleGroup/SiegeTankPanel"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_vehiclesSiegeTankPanel = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeImage, libNtve_gf_ConvertStringToUILayoutFrameName("TechGroupPanel/StarshipsGroup/MedivacPanel"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_starshipsMedivacPanel = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeImage, libNtve_gf_ConvertStringToUILayoutFrameName("TechGroupPanel/StarshipsGroup/WraithPanel"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_starshipsWraithPanel = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeImage, libNtve_gf_ConvertStringToUILayoutFrameName("TechGroupPanel/StarshipsGroup/VikingPanel"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_starshipsVikingPanel = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeImage, libNtve_gf_ConvertStringToUILayoutFrameName("TechGroupPanel/StarshipsGroup/BansheePanel"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_starshipsBansheePanel = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_armoryPanel, c_triggerControlTypeImage, libNtve_gf_ConvertStringToUILayoutFrameName("TechGroupPanel/StarshipsGroup/BattlecruiserPanel"));
    libAB61AAA6_gv_kL_ArmoryPanel[lp_player].lv_starshipsBattlecruiserPanel = DialogControlLastCreated();
}

void libAB61AAA6_gf_KL_HookupAchievementPanels (int lp_player) {
    // Variable Declarations
    int lv_index;

    // Automatic Variable Declarations
    const int auto14A39627_ae = 4;
    const int auto14A39627_ai = 1;

    // Variable Initialization

    // Implementation
    DialogControlHookupStandard(c_triggerControlTypePanel, "UIContainer/AchievementFanfaresContainer");
    libAB61AAA6_gv_kL_AchievementFanfarePanel[lp_player].lv_fanfareContainer = DialogControlLastCreated();
    lv_index = 0;
    for ( ; ( (auto14A39627_ai >= 0 && lv_index <= auto14A39627_ae) || (auto14A39627_ai < 0 && lv_index >= auto14A39627_ae) ) ; lv_index += auto14A39627_ai ) {
        DialogControlHookup(libAB61AAA6_gv_kL_AchievementFanfarePanel[lp_player].lv_fanfareContainer, c_triggerControlTypePanel, libNtve_gf_ConvertStringToUILayoutFrameName(("CenteredFrame/AchievementFrame" + IntToString(lv_index))));
        libAB61AAA6_gv_kL_AchievementFanfarePanel[lp_player].lv_achievementFrames[lv_index] = DialogControlLastCreated();
        DialogControlHookup(libAB61AAA6_gv_kL_AchievementFanfarePanel[lp_player].lv_achievementFrames[lv_index], c_triggerControlTypeLabel, libNtve_gf_ConvertStringToUILayoutFrameName("Title"));
        libAB61AAA6_gv_kL_AchievementFanfarePanel[lp_player].lv_title[lv_index] = DialogControlLastCreated();
        DialogControlHookup(libAB61AAA6_gv_kL_AchievementFanfarePanel[lp_player].lv_achievementFrames[lv_index], c_triggerControlTypeLabel, libNtve_gf_ConvertStringToUILayoutFrameName("Description"));
        libAB61AAA6_gv_kL_AchievementFanfarePanel[lp_player].lv_description[lv_index] = DialogControlLastCreated();
        DialogControlHookup(libAB61AAA6_gv_kL_AchievementFanfarePanel[lp_player].lv_achievementFrames[lv_index], c_triggerControlTypeLabel, libNtve_gf_ConvertStringToUILayoutFrameName("PointsLabel"));
        libAB61AAA6_gv_kL_AchievementFanfarePanel[lp_player].lv_pointsLabel[lv_index] = DialogControlLastCreated();
        DialogControlHookup(libAB61AAA6_gv_kL_AchievementFanfarePanel[lp_player].lv_achievementFrames[lv_index], c_triggerControlTypeImage, libNtve_gf_ConvertStringToUILayoutFrameName("Icon"));
        libAB61AAA6_gv_kL_AchievementFanfarePanel[lp_player].lv_icon[lv_index] = DialogControlLastCreated();
    }
}

void libAB61AAA6_gf_DisplaySharedPanelForPlayer (string lp_mission, int lp_player) {
    // Automatic Variable Declarations
    // Implementation
    CameraLockInput(lp_player, true);
    libAB61AAA6_gf_LoadBankDataforPlayer(lp_player);
    if ((libAB61AAA6_gv_uIIntizialized[lp_player] != true)) {
        libAB61AAA6_gf_KL_HookupPanelsForPlayer(lp_player);
    }

    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Victory, PlayerGroupAll(), 0.0);
    DialogSetVisible(libAB61AAA6_gv_kL_SharedPanel[lp_player].lv_dialog, PlayerGroupAll(), true);
    libAB61AAA6_gf_UpdateMissionData(lp_mission, lp_player);
    libAB61AAA6_gf_KL_UpdateArmory(lp_player);
    libAB61AAA6_gf_UpdateAchievementData("TRaynor01 - Objectives", 1, 1);
    libAB61AAA6_gf_UpdateAchievementData("TRaynor01 - Normal", 1, 2);
    libAB61AAA6_gf_UpdateAchievementData("TRaynor01 - Hard", 1, 3);
    Wait(1.5, c_timeGame);
    libAB61AAA6_gv_kL_CurrentlyInMission = false;
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: KL_HideAchievementPanel)P1
//--------------------------------------------------------------------------------------------------
bool libAB61AAA6_gt_KL_HideAchievementPanelP1_Func (bool testConds, bool runActions) {
    // Variable Declarations
    const int lv_player = 1;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    while (!((libAB61AAA6_gv_kL_ActiveAchievement[lv_player][0] == false) && (libAB61AAA6_gv_kL_ActiveAchievement[lv_player][1] == false) && (libAB61AAA6_gv_kL_ActiveAchievement[lv_player][2] == false) && (libAB61AAA6_gv_kL_ActiveAchievement[lv_player][3] == false) && (libAB61AAA6_gv_kL_ActiveAchievement[lv_player][4] == false))) {
        Wait(0.5, c_timeGame);
    }
    DialogControlSendAnimationEvent(libAB61AAA6_gv_kL_AchievementFanfarePanel[lv_player].lv_fanfareContainer, PlayerGroupSingle(lv_player), "Hide");
    return true;
}

//--------------------------------------------------------------------------------------------------
void libAB61AAA6_gt_KL_HideAchievementPanelP1_Init () {
    libAB61AAA6_gt_KL_HideAchievementPanelP1 = TriggerCreate("libAB61AAA6_gt_KL_HideAchievementPanelP1_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: KL_HideAchievementPanel)P2
//--------------------------------------------------------------------------------------------------
bool libAB61AAA6_gt_KL_HideAchievementPanelP2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    const int lv_player = 2;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    while (!((libAB61AAA6_gv_kL_ActiveAchievement[lv_player][0] == false) && (libAB61AAA6_gv_kL_ActiveAchievement[lv_player][1] == false) && (libAB61AAA6_gv_kL_ActiveAchievement[lv_player][2] == false) && (libAB61AAA6_gv_kL_ActiveAchievement[lv_player][3] == false) && (libAB61AAA6_gv_kL_ActiveAchievement[lv_player][4] == false))) {
        Wait(0.5, c_timeGame);
    }
    DialogControlSendAnimationEvent(libAB61AAA6_gv_kL_AchievementFanfarePanel[lv_player].lv_fanfareContainer, PlayerGroupSingle(lv_player), "Hide");
    return true;
}

//--------------------------------------------------------------------------------------------------
void libAB61AAA6_gt_KL_HideAchievementPanelP2_Init () {
    libAB61AAA6_gt_KL_HideAchievementPanelP2 = TriggerCreate("libAB61AAA6_gt_KL_HideAchievementPanelP2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: KL_HideAchievementPanel)P3
//--------------------------------------------------------------------------------------------------
bool libAB61AAA6_gt_KL_HideAchievementPanelP3_Func (bool testConds, bool runActions) {
    // Variable Declarations
    const int lv_player = 3;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    while (!((libAB61AAA6_gv_kL_ActiveAchievement[lv_player][0] == false) && (libAB61AAA6_gv_kL_ActiveAchievement[lv_player][1] == false) && (libAB61AAA6_gv_kL_ActiveAchievement[lv_player][2] == false) && (libAB61AAA6_gv_kL_ActiveAchievement[lv_player][3] == false) && (libAB61AAA6_gv_kL_ActiveAchievement[lv_player][4] == false))) {
        Wait(0.5, c_timeGame);
    }
    DialogControlSendAnimationEvent(libAB61AAA6_gv_kL_AchievementFanfarePanel[lv_player].lv_fanfareContainer, PlayerGroupSingle(lv_player), "Hide");
    return true;
}

//--------------------------------------------------------------------------------------------------
void libAB61AAA6_gt_KL_HideAchievementPanelP3_Init () {
    libAB61AAA6_gt_KL_HideAchievementPanelP3 = TriggerCreate("libAB61AAA6_gt_KL_HideAchievementPanelP3_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: KL_ReadyPanelCreate
//--------------------------------------------------------------------------------------------------
bool libAB61AAA6_gt_KL_ReadyPanelCreate_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libAB61AAA6_gf_KL_HookupAchievementPanels(1);
    libAB61AAA6_gf_KL_HookupAchievementPanels(2);
    libAB61AAA6_gf_KL_HookupAchievementPanels(3);
    DialogCreate(500, 400, c_anchorCenter, 0, 0, true);
    DialogSetFullscreen(DialogLastCreated(), true);
    DialogSetImageVisible(DialogLastCreated(), false);
    libAB61AAA6_gv_kL_ReadyPanel[1].lv_dialog = DialogLastCreated();
    DialogControlCreateFromTemplate(libAB61AAA6_gv_kL_ReadyPanel[1].lv_dialog, c_triggerControlTypePanel, "WoL_Coop_StandardTemplate/TeammatesReadyPanel");
    libAB61AAA6_gv_kL_ReadyPanel[1].lv_panel = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ReadyPanel[1].lv_panel, c_triggerControlTypePanel, libNtve_gf_ConvertStringToUILayoutFrameName("Player1Frame"));
    libAB61AAA6_gv_kL_ReadyPanel[1].lv_playerPanel[1] = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ReadyPanel[1].lv_panel, c_triggerControlTypePanel, libNtve_gf_ConvertStringToUILayoutFrameName("Player2Frame"));
    libAB61AAA6_gv_kL_ReadyPanel[1].lv_playerPanel[2] = DialogControlLastCreated();
    DialogControlHookup(libAB61AAA6_gv_kL_ReadyPanel[1].lv_panel, c_triggerControlTypePanel, libNtve_gf_ConvertStringToUILayoutFrameName("Player3Frame"));
    libAB61AAA6_gv_kL_ReadyPanel[1].lv_playerPanel[3] = DialogControlLastCreated();
    DialogSetVisible(libAB61AAA6_gv_kL_ReadyPanel[1].lv_dialog, PlayerGroupAll(), true);
    DialogControlSetAnimationState(libAB61AAA6_gv_kL_ReadyPanel[1].lv_playerPanel[1], PlayerGroupAll(), "Player", "1");
    DialogControlSetAnimationState(libAB61AAA6_gv_kL_ReadyPanel[1].lv_playerPanel[2], PlayerGroupAll(), "Player", "2");
    DialogControlSetAnimationState(libAB61AAA6_gv_kL_ReadyPanel[1].lv_playerPanel[3], PlayerGroupAll(), "Player", "3");
    return true;
}

//--------------------------------------------------------------------------------------------------
void libAB61AAA6_gt_KL_ReadyPanelCreate_Init () {
    libAB61AAA6_gt_KL_ReadyPanelCreate = TriggerCreate("libAB61AAA6_gt_KL_ReadyPanelCreate_Func");
    TriggerAddEventMapInit(libAB61AAA6_gt_KL_ReadyPanelCreate);
}

//--------------------------------------------------------------------------------------------------
// Trigger: KL_UpgradePressed
//--------------------------------------------------------------------------------------------------
bool libAB61AAA6_gt_KL_UpgradePressed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int auto760D1A59_val;

    // Conditions
    if (testConds) {
        if (!(((libAB61AAA6_gv_kL_ArmoryTechButtons[EventPlayer()].lv_combatShield == EventDialogControl()) || (libAB61AAA6_gv_kL_ArmoryTechButtons[EventPlayer()].lv_stimpack == EventDialogControl())))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto760D1A59_val = EventDialogControl();
    if (auto760D1A59_val == libAB61AAA6_gv_kL_ArmoryTechButtons[EventPlayer()].lv_combatShield) {
        libAB61AAA6_gf_KL_UpgradeDataSet("[Infantry-Marine] Combat Shield", EventPlayer());
    }
    else if (auto760D1A59_val == libAB61AAA6_gv_kL_ArmoryTechButtons[EventPlayer()].lv_stimpack) {
        libAB61AAA6_gf_KL_UpgradeDataSet("[Infantry-Marine] StimPack", EventPlayer());
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libAB61AAA6_gt_KL_UpgradePressed_Init () {
    libAB61AAA6_gt_KL_UpgradePressed = TriggerCreate("libAB61AAA6_gt_KL_UpgradePressed_Func");
    TriggerAddEventDialogControl(libAB61AAA6_gt_KL_UpgradePressed, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Debug - Tech Fanfare
//--------------------------------------------------------------------------------------------------
bool libAB61AAA6_gt_DebugTechFanfare_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libAB61AAA6_gf_ArmoryDisplayPurchaseFanfare(libAB61AAA6_gv_kL_ArmoryTechButtons[EventPlayer()].lv_combatShield, EventPlayer());
    return true;
}

//--------------------------------------------------------------------------------------------------
void libAB61AAA6_gt_DebugTechFanfare_Init () {
    libAB61AAA6_gt_DebugTechFanfare = TriggerCreate("libAB61AAA6_gt_DebugTechFanfare_Func");
    TriggerAddEventChatMessage(libAB61AAA6_gt_DebugTechFanfare, c_playerAny, "fanfare", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Debug - Replace Achievements Menu
//--------------------------------------------------------------------------------------------------
bool libAB61AAA6_gt_DebugReplaceAchievementsMenu_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UISetGameMenuItemVisible(PlayerGroupAll(), c_gameMenuDialogAchievementsButton, false);
    UISetGameMenuItemVisible(PlayerGroupAll(), c_gameMenuDialogRestartButton, true);
    UISetGameMenuItemVisible(PlayerGroupAll(), c_gameMenuDialogGenericButton1, true);
    UISetGameMenuItemText(PlayerGroupAll(), c_gameMenuDialogGenericButton1, StringExternal("Param/Value/lib_AB61AAA6_912A73FA"));
    UISetGameMenuItemShortcut(PlayerGroupAll(), c_gameMenuDialogMessageLogButton, StringExternal("Param/Value/lib_AB61AAA6_9C4C76CD"));
    UISetGameMenuItemText(PlayerGroupAll(), c_gameMenuDialogMessageLogButton, StringExternal("Param/Value/lib_AB61AAA6_9524C754"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void libAB61AAA6_gt_DebugReplaceAchievementsMenu_Init () {
    libAB61AAA6_gt_DebugReplaceAchievementsMenu = TriggerCreate("libAB61AAA6_gt_DebugReplaceAchievementsMenu_Func");
    TriggerAddEventMapInit(libAB61AAA6_gt_DebugReplaceAchievementsMenu);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Debug - Show Achievements Menu
//--------------------------------------------------------------------------------------------------
bool libAB61AAA6_gt_DebugShowAchievementsMenu_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    return true;
}

//--------------------------------------------------------------------------------------------------
void libAB61AAA6_gt_DebugShowAchievementsMenu_Init () {
    libAB61AAA6_gt_DebugShowAchievementsMenu = TriggerCreate("libAB61AAA6_gt_DebugShowAchievementsMenu_Func");
    TriggerAddEventGameMenuItemSelected(libAB61AAA6_gt_DebugShowAchievementsMenu, c_playerAny, c_gameMenuDialogGenericButton1);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Debug - Research Fanfare
//--------------------------------------------------------------------------------------------------
bool libAB61AAA6_gt_DebugResearchFanfare_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    DialogControlSetAnimationState(libAB61AAA6_gv_kL_LaboratoryPanel[EventPlayer()].lv_researchButtons_Zerg[1][1], PlayerGroupAll(), "ResearchState", "Unresearchable");
    DialogControlSendAnimationEvent(libAB61AAA6_gv_kL_LaboratoryPanel[EventPlayer()].lv_researchButtons_Zerg[1][2], PlayerGroupSingle(EventPlayer()), "ResearchStart");
    DialogControlSetAnimationState(libAB61AAA6_gv_kL_LaboratoryPanel[EventPlayer()].lv_researchButtons_Zerg[1][3], PlayerGroupAll(), "ResearchState", "Unresearchable");
    DialogControlSetVisible(libAB61AAA6_gv_kL_LaboratoryPanel[EventPlayer()].lv_researchAvailablePanel_Zerg[1], PlayerGroupSingle(EventPlayer()), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libAB61AAA6_gt_DebugResearchFanfare_Init () {
    libAB61AAA6_gt_DebugResearchFanfare = TriggerCreate("libAB61AAA6_gt_DebugResearchFanfare_Func");
    TriggerAddEventChatMessage(libAB61AAA6_gt_DebugResearchFanfare, c_playerAny, "research", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Debug - Protoss Research
//--------------------------------------------------------------------------------------------------
bool libAB61AAA6_gt_DebugProtossResearch_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libAB61AAA6_gf_ArmoryDisplayPurchaseFanfare(libAB61AAA6_gv_kL_ArmoryTechButtons[EventPlayer()].lv_combatShield, EventPlayer());
    return true;
}

//--------------------------------------------------------------------------------------------------
void libAB61AAA6_gt_DebugProtossResearch_Init () {
    libAB61AAA6_gt_DebugProtossResearch = TriggerCreate("libAB61AAA6_gt_DebugProtossResearch_Func");
    TriggerAddEventChatMessage(libAB61AAA6_gt_DebugProtossResearch, c_playerAny, "Protoss", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Debug - Zerg Research
//--------------------------------------------------------------------------------------------------
bool libAB61AAA6_gt_DebugZergResearch_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libAB61AAA6_gf_ArmoryDisplayPurchaseFanfare(libAB61AAA6_gv_kL_ArmoryTechButtons[EventPlayer()].lv_combatShield, EventPlayer());
    return true;
}

//--------------------------------------------------------------------------------------------------
void libAB61AAA6_gt_DebugZergResearch_Init () {
    libAB61AAA6_gt_DebugZergResearch = TriggerCreate("libAB61AAA6_gt_DebugZergResearch_Func");
    TriggerAddEventChatMessage(libAB61AAA6_gt_DebugZergResearch, c_playerAny, "Zerg", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Debug - Toggle Research Button
//--------------------------------------------------------------------------------------------------
bool libAB61AAA6_gt_DebugToggleResearchButton_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    bool autoC0B65348_val;

    // Actions
    if (!runActions) {
        return true;
    }

    autoC0B65348_val = libAB61AAA6_gv_dEBUGButtonState;
    if (autoC0B65348_val == true) {
        libAB61AAA6_gv_dEBUGButtonState = false;
    }
    else if (autoC0B65348_val == false) {
        libAB61AAA6_gv_dEBUGButtonState = true;
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libAB61AAA6_gt_DebugToggleResearchButton_Init () {
    libAB61AAA6_gt_DebugToggleResearchButton = TriggerCreate("libAB61AAA6_gt_DebugToggleResearchButton_Func");
    TriggerAddEventChatMessage(libAB61AAA6_gt_DebugToggleResearchButton, c_playerAny, "Toggle", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Debug - Display Player Panel
//--------------------------------------------------------------------------------------------------
bool libAB61AAA6_gt_DebugDisplayPlayerPanel_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libAB61AAA6_gv_dEBUGindex += 1;
    DialogControlSetVisible(libAB61AAA6_gv_kL_ReadyPanel[1].lv_playerPanel[libAB61AAA6_gv_dEBUGindex], PlayerGroupAll(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libAB61AAA6_gt_DebugDisplayPlayerPanel_Init () {
    libAB61AAA6_gt_DebugDisplayPlayerPanel = TriggerCreate("libAB61AAA6_gt_DebugDisplayPlayerPanel_Func");
    TriggerAddEventChatMessage(libAB61AAA6_gt_DebugDisplayPlayerPanel, c_playerAny, "Ready", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Debug - DisplayAchievement
//--------------------------------------------------------------------------------------------------
bool libAB61AAA6_gt_DebugDisplayAchievement_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libAB61AAA6_gf_AwardAchievement("TRaynor01 - Normal", EventPlayer());
    return true;
}

//--------------------------------------------------------------------------------------------------
void libAB61AAA6_gt_DebugDisplayAchievement_Init () {
    libAB61AAA6_gt_DebugDisplayAchievement = TriggerCreate("libAB61AAA6_gt_DebugDisplayAchievement_Func");
    TriggerAddEventChatMessage(libAB61AAA6_gt_DebugDisplayAchievement, c_playerAny, "achievement", true);
}

void libAB61AAA6_InitTriggers () {
    libAB61AAA6_gt_KL_HideAchievementPanelP1_Init();
    libAB61AAA6_gt_KL_HideAchievementPanelP2_Init();
    libAB61AAA6_gt_KL_HideAchievementPanelP3_Init();
    libAB61AAA6_gt_KL_ReadyPanelCreate_Init();
    libAB61AAA6_gt_KL_UpgradePressed_Init();
    libAB61AAA6_gt_DebugTechFanfare_Init();
    libAB61AAA6_gt_DebugReplaceAchievementsMenu_Init();
    libAB61AAA6_gt_DebugShowAchievementsMenu_Init();
    libAB61AAA6_gt_DebugResearchFanfare_Init();
    libAB61AAA6_gt_DebugProtossResearch_Init();
    libAB61AAA6_gt_DebugZergResearch_Init();
    libAB61AAA6_gt_DebugToggleResearchButton_Init();
    libAB61AAA6_gt_DebugDisplayPlayerPanel_Init();
    libAB61AAA6_gt_DebugDisplayAchievement_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool libAB61AAA6_InitLib_completed = false;

void libAB61AAA6_InitLib () {
    if (libAB61AAA6_InitLib_completed) {
        return;
    }

    libAB61AAA6_InitLib_completed = true;

    libAB61AAA6_InitLibraries();
    libAB61AAA6_InitVariables();
    libAB61AAA6_InitTriggers();
}

