include "TriggerLibs/natives"

//--------------------------------------------------------------------------------------------------
// Library: WoL Coop (UI)
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libAB61AAA6_ge_KL_UnitCategory_Base = 0;
const int libAB61AAA6_ge_KL_UnitCategory_Infantry = 1;
const int libAB61AAA6_ge_KL_UnitCategory_Vehicles = 2;
const int libAB61AAA6_ge_KL_UnitCategory_Starships = 3;
const int libAB61AAA6_ge_KL_UnitType_Marine = 0x00000001;
const int libAB61AAA6_ge_KL_UnitType_Medic = 0x00000002;
const int libAB61AAA6_ge_KL_UnitType_Marauder = 0x00000004;
const int libAB61AAA6_ge_KL_UnitType_Firebat = 0x00000008;
const int libAB61AAA6_ge_KL_UnitType_Reaper = 0x00000010;

// Structures
struct libAB61AAA6_gs_GlobalValues {
    bank lv_playerBank;
    string lv_mapKey;
    int lv_cash;
    int lv_protossResearch;
    int lv_zergResearch;
    bool lv_missionPlayedPreviously;
};

struct libAB61AAA6_gs_KL_ReadyPanel {
    int lv_dialog;
    int lv_panel;
    int[4] lv_playerPanel;
};

struct libAB61AAA6_gs_KL_AchievementFanfarePanel {
    int lv_fanfareContainer;
    int[5] lv_achievementFrames;
    int[5] lv_title;
    int[5] lv_description;
    int[5] lv_pointsLabel;
    int[5] lv_icon;
};

struct libAB61AAA6_gs_KL_SharedPanel {
    int lv_dialog;
    int lv_sharedPanel;
    int lv_missionTimeLabel;
    int lv_quitButton;
};

struct libAB61AAA6_gs_KL_SummaryPanel {
    int lv_summaryPanel;
    int lv_missionReportImage;
    int lv_rewardLabel;
    int lv_missionLabel;
    int[4] lv_playerButtons;
    int[4] lv_playerLabel;
    int[4] lv_rewardPanels;
    int[4] lv_rewardIcons;
    int[4] lv_rewardTitles;
    int[4] lv_rewardDescriptions;
    int[4] lv_rewardScore;
    int lv_statBackground;
    int[10] lv_statContainers;
    int[10] lv_statTitle;
    int[10] lv_statValue;
};

struct libAB61AAA6_gs_KL_ArmoryPanel {
    int lv_armoryPanel;
    int[7] lv_groupTabs;
    int lv_baseBunkerPanel;
    int lv_baseTurretPanel;
    int lv_baseSCVPanel;
    int lv_baseCCPanel;
    int lv_infantryMarinePanel;
    int lv_infantryMedicPanel;
    int lv_infantryFirebatPanel;
    int lv_infantryMarauderPanel;
    int lv_infantryReaperPanel;
    int lv_vehiclesHellionPanel;
    int lv_vehiclesVulturePanel;
    int lv_vehiclesGoliathPanel;
    int lv_vehiclesDiamondBackPanel;
    int lv_vehiclesSiegeTankPanel;
    int lv_starshipsMedivacPanel;
    int lv_starshipsWraithPanel;
    int lv_starshipsVikingPanel;
    int lv_starshipsBansheePanel;
    int lv_starshipsBattlecruiserPanel;
    int lv_title;
    int lv_effects;
    int lv_description;
    int lv_credits;
    int lv_costBackground;
    int lv_cost;
    int lv_purchaseButton;
};

struct libAB61AAA6_gs_KL_ArmoryTechButtons {
    int lv_projectileAccelerator;
    int lv_neosteelBunker;
    int lv_titaniumHousing;
    int lv_hellstormBatteries;
    int lv_advancedConstruction;
    int lv_dualFusionWelders;
    int lv_fireSupressionSystem;
    int lv_orbitalCommand;
    int lv_stimpack;
    int lv_combatShield;
    int lv_medicUpgd1;
    int lv_medicUpgd2;
    int lv_firebatUpgd1;
    int lv_firebatUpgd2;
    int lv_marauderUpgd1;
    int lv_marauderUpgd2;
    int lv_reaperUpgd1;
    int lv_reaperUpgd2;
    int lv_hellionUpgd1;
    int lv_hellionUpgd2;
    int lv_vultureUpgd1;
    int lv_vultureUpgd2;
};

struct libAB61AAA6_gs_KL_LaboratoryPanel {
    int lv_laboratoryPanel;
    int lv_researchProgress_Toss;
    int lv_researchLevel_Toss;
    int[6][4] lv_researchButtons_Toss;
    int lv_researchProgress_Zerg;
    int lv_researchLevel_Zerg;
    int[6][4] lv_researchButtons_Zerg;
    int[6] lv_researchAvailablePanel_Zerg;
};

// Variable Declarations
libAB61AAA6_gs_GlobalValues[4] libAB61AAA6_gv_globalValues;
bool libAB61AAA6_gv_kL_CurrentlyInMission;
bool[4][5] libAB61AAA6_gv_kL_ActiveAchievement;
libAB61AAA6_gs_KL_ReadyPanel[4] libAB61AAA6_gv_kL_ReadyPanel;
int libAB61AAA6_gv_kL_StatPanelsInUse;
bool[11] libAB61AAA6_gv_kL_StatPanelActive;
bool libAB61AAA6_gv_kL_ArmoryUpdated;
int libAB61AAA6_gv_kL_AllowedBaseUnits;
int libAB61AAA6_gv_kL_AllowedInfantryUnits;
int libAB61AAA6_gv_kL_AllowedVehicleUnits;
int libAB61AAA6_gv_kL_AllowedStarshipUnits;
bool[4] libAB61AAA6_gv_uIIntizialized;
libAB61AAA6_gs_KL_AchievementFanfarePanel[4] libAB61AAA6_gv_kL_AchievementFanfarePanel;
libAB61AAA6_gs_KL_SharedPanel[4] libAB61AAA6_gv_kL_SharedPanel;
libAB61AAA6_gs_KL_SummaryPanel[4] libAB61AAA6_gv_kL_SummaryPanel;
libAB61AAA6_gs_KL_ArmoryPanel[4] libAB61AAA6_gv_kL_ArmoryPanel;
libAB61AAA6_gs_KL_ArmoryTechButtons[4] libAB61AAA6_gv_kL_ArmoryTechButtons;
libAB61AAA6_gs_KL_LaboratoryPanel[4] libAB61AAA6_gv_kL_LaboratoryPanel;
int libAB61AAA6_gv_dEBUGindex;
bool libAB61AAA6_gv_dEBUGButtonState;

// Function Declarations
void libAB61AAA6_gf_LoadBankDataforPlayer (int lp_player);
void libAB61AAA6_gf_AwardAchievement (string lp_achievement, int lp_player);
void libAB61AAA6_gf_KL_DisplayAchievement (string lp_achievement, int lp_player);
void libAB61AAA6_gf_UpdateMissionData (string lp_mission, int lp_player);
void libAB61AAA6_gf_UpdateAchievementData (string lp_achievement, int lp_player, int lp_slot);
void libAB61AAA6_gf_AddStatPanel (int lp_player, string lp_title, string lp_value);
void libAB61AAA6_gf_PlayStatBirth (int lp_player);
void libAB61AAA6_gf_KL_UpgradeDataSet (string lp_upgrade, int lp_player);
void libAB61AAA6_gf_KL_UpdateArmory (int lp_player);
void libAB61AAA6_gf_KL_UpdateArmoryCash (int lp_player);
void libAB61AAA6_gf_KL_DisplayAllowedUnits (int lp_player);
void libAB61AAA6_gf_ArmoryDisplayPurchaseFanfare (int lp_anchorDialog, int lp_player);
void libAB61AAA6_gf_KL_HookupPanelsForPlayer (int lp_player);
void libAB61AAA6_gf_KL_HookupArmoryPanels (int lp_player);
void libAB61AAA6_gf_KL_HookupAchievementPanels (int lp_player);
void libAB61AAA6_gf_DisplaySharedPanelForPlayer (string lp_mission, int lp_player);

// Trigger Declarations
trigger libAB61AAA6_gt_KL_HideAchievementPanelP1;
trigger libAB61AAA6_gt_KL_HideAchievementPanelP2;
trigger libAB61AAA6_gt_KL_HideAchievementPanelP3;
trigger libAB61AAA6_gt_KL_ReadyPanelCreate;
trigger libAB61AAA6_gt_KL_UpgradePressed;
trigger libAB61AAA6_gt_DebugTechFanfare;
trigger libAB61AAA6_gt_DebugReplaceAchievementsMenu;
trigger libAB61AAA6_gt_DebugShowAchievementsMenu;
trigger libAB61AAA6_gt_DebugResearchFanfare;
trigger libAB61AAA6_gt_DebugProtossResearch;
trigger libAB61AAA6_gt_DebugZergResearch;
trigger libAB61AAA6_gt_DebugToggleResearchButton;
trigger libAB61AAA6_gt_DebugDisplayPlayerPanel;
trigger libAB61AAA6_gt_DebugDisplayAchievement;

// Library Initialization
void libAB61AAA6_InitVariables ();

